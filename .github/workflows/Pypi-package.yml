
name: Publish Python 🐍 distributions 📦 to PyPI and TestPyPI

on: push

jobs:
  build-n-publish:
    name: Build and publish Python 🐍 distributions 📦 to PyPI and TestPyPI
    runs-on: ubuntu-18.04
    
    steps:
    - uses: actions/checkout@master
      with:
        submodules: recursive
    - name: Set up Python 3.8
      uses: actions/setup-python@v1
      with:
        python-version: 3.8
    - name: Setup virtual environment
      run: |
        pip install --upgrade pip
        python3.8 -m venv env
        source env/bin/activate
        echo "VIRTUAL ENV:" $VIRTUAL_ENV
    - name: Install Cmake
      run: >-
        sudo apt-get install cmake
    - name: Install Boost
      run: |
        sudo apt-get update
        sudo apt-get -y install build-essential g++ python-dev autotools-dev libicu-dev libbz2-dev
        wget https://boostorg.jfrog.io/artifactory/main/release/1.77.0/source/boost_1_77_0.tar.gz
        tar -zxvf boost_1_77_0.tar.gz
        ls
        cd boost_1_77_0
        cpuCores=`cat /proc/cpuinfo | grep "cpu cores" | uniq | awk '{print $NF}'`
        echo "Available CPU cores: "$cpuCores
        ./bootstrap.sh 
        sudo ./b2 --with=all -j $cpuCores install
        cat /usr/local/include/boost/version.hpp | grep "BOOST_LIB_VERSION"
    - name: check directory content
      run: |
        cd env/lib
        ls
    - name: Install pypa/build
      run: >-
        python -m
        pip install
        build
        --user
    - name: Install cibuildwheel
      run: |
        ls
        source env/bin/activate
        python -m pip install cibuildwheel==2.4.0
      
    - name: Build a binary wheel and a source tarball
      run: |
        source env/bin/activate
        echo "VIRTUAL ENV:" $VIRTUAL_ENV
        echo "::set-env name=BOOST_ROOT::$BOOST_ROOT"
        cat /usr/local/include/boost/version.hpp | grep "BOOST_LIB_VERSION"
        ls
        python -m cibuildwheel --output-dir dist/
        env:
          CIBW_BUILD: "cp36-* cp37-* cp38-* cp39-*"
          BOOST_DIR: "boost_1_77_0"
          BOOST_ROOT: "boost_1_77_0"
          DBoost_USE_STATIC_LIBS=ON
          DBoost_INCLUDE_DIR: "boost_1_77_0"
          Boost_INCLUDE_DIR: "boost_1_77_0"
          DBoost_USE_STATIC_LIBS=ON
          DBoost_NO_BOOST_CMAKE=ON
          DBOOST_ROOT="boost_1_77_0"
          DBOOST_LIBRARYDIR="boost_1_77_0"
          Boost_DEBUG=ON
          
    - name: check directory content
      run: |
        ls
    - name: Publish distribution 📦 to Test PyPI
      uses: pypa/gh-action-pypi-publish@master
      with:
        password: ${{ secrets.TEST_PYPI_API_TOKEN }}
        repository_url: https://test.pypi.org/legacy/
    - name: Publish distribution 📦 to PyPI
      if: startsWith(github.ref, 'refs/tags')
      uses: pypa/gh-action-pypi-publish@master
      with:
        password: ${{ secrets.PYPI_API_TOKEN }}
